pico-8 cartridge // http://www.pico-8.com
version 42
__lua__


	-- objs is all objects
	-- bodies are objs w/ collision
local objs,ents,bodies,

	-- funcs that run every frame
	-- timers with new_timer are loops
loops,

	-- logs for debug
logs,
	-- queue for obj deletion
del_que,
	-- id counter for giving each obj a unique id
id_cnt
=
{},{},{},

{},
{},
{},
0

	-- make layers
for i=1,8 do
	add(objs,{})
end


	-- utilities by ms. mouse
local function compose(a, b)
	return function(...)return a(b(...))end
end

local function bind_front(f,v)
	return function(...)
		return f(v, ...)
	end
end


	-- add log
local function log(l,i)
	logs[i or 1]=l or "false"
end


	-- create loop that runs every frame
local function new_loop(func)
	return add(loops,func)
end
	-- new layer loop, useful for drawing, just a token optimization
function new_l_loop(func,l,x,y)
	return new_obj({
		_,
		func,
	},l,x,y)
end

	-- delete obj
local function del_obj(o)
	add(del_que,o).del=true
	return o
end



	-- delete loop
local del_loop
=
bind_front(del,loops)



	-- new timer, if loop is true it will repeat
local function new_timer(am,func,loop)
	am=am&-1
	local org_am,timer=am
	
	timer=function()
		if am==0do
			am=org_am
			func()
			if(not loop)del_loop(timer)
		else
			am-=1
		end
	end
	
	return new_loop(timer)
end


	-- token optimization
function set_meta(o)
	return setmetatable(o,{__index=_ENV})
end
	-- create new object
function new_obj(no,l,x,y)
	local o=set_meta{
		loops={},objs={},
		init=no[1],upd=no[2],
		l=l,id=id_cnt
	}
	
	
	id_cnt+=.001
	
	
	o.new_loop,o.del_loop,o.new_timer,
	o.new_l_loop,o.del_obj
	
	=
	function(func)
		return add(o.loops,new_loop(function()func(o)end))
	end,
	
 compose(bind_front(del,o.loops),del_loop),
 compose(bind_front(add,o.loops),new_timer),
 compose(bind_front(add,o.objs),new_l_loop),
 compose(bind_front(del,o.objs),del_obj)
	

	if(x)o.x,o.y=x,y
	if(o.init)o:init()
	
	return add(objs[o.l],o)
end
-->8
-- objects
player = new_obj(
	{
		function(_ENV) --init
		
		end,

		function(_ENV)
			x += 1
		end
	}
)

buildings = {}
building_templates = { --{inclusive map boundaries: {mapx1, mapy1, mapx2, mapy2}, {...template indices feasibly generated after this one (self-referential indexes)}}
	{{4,4,6,7}, {}}, --mid wide
	{{8,2,9,7}, {}}, --tall skinny
	{{11,5,18,7}, {}}, -- low wide (market)
	{{21,1,25,7}, {}}, -- tall wide (aaa!)
	{{28,2,29,7}, {}}, --mid skinny
	{{31,5,32,7}, {}}, --low skinny
	{{34,4,35,7}, {}}, --a-little-taller-than-low skinny
	{{37,1,45,7}, {}}, --tall then low (factory  )
	{{48,2,53,7}, {}}, --idk at this point
	{{55,1,58,7}, {}}, --mid-height mid-wide
	{{60,6,63,7}, {}}, --low wide horizontal girder
	{{65,5,69,7}, {}}, --mid wide horizontal girder
	{{71,4,73,7}, {}}, --mid skinny horizontal girder
	{{75,6,76,7}, {}}, --low skinny hori girder
	{{78,0,82,7}, {}}, --double girder mid
	{{84,2,88,7}, {}} --the T
}

function add_random_building()

end

function new_building(template_index) --tacks a new building on to the list of buildings

end

function delete_building() --deletes the building at index 1
	buildings[1].del_obj()
	deli(buildings, 1)
end

new_obj({
		function(_ENV)
			--populate buildings initially
			
		end,
		
		
		function(_ENV)
			spr(1,x,y)
		end
	},
		-- layer
	4,
		-- position,
	64,64
)
-->8

	-- game loop, faster than _update()
::_:: -- game loop begin
cls()

	-- easy input vars
‚¨ÖÔ∏è,‚û°Ô∏è,‚¨ÜÔ∏è,‚¨áÔ∏è,üÖæÔ∏è,‚ùé
=
btn(0),btn(1),btn(2),btn(3),btn(4),btn(5)


	-- update all object layers
for a=1,8 do
	for _,o in inext,objs[a]do
		o:upd()
	end
end


for _,l in inext,loops do
	l()
end


	-- obj deletion queue
for _,o in inext,del_que do
	del(objs[o.l],o)
	
	del(ents,
		del(targs,
			del(bodies,o)
		)
	)
	
	foreach(o.objs,o.del_obj)
	foreach(o.loops,o.del_loop)

	del(del_que,o)
end


	-- print logs
for i,l in inext,logs do
	?l,camx,10*(i-1)+camy,8
end

flip()goto _
__gfx__
0000000011111111f00000000000000f00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2222222222222222ffffffff
0000000011111111f00000000000000f00000000f00000000000000f00000000f00000000000000ff00000000000000f0000000020000000000000020000000f
0070070011111111f00000aa0aa0000f000aa000f00000005555550f55555555f00055000005500ff00005500000550f0000550020000000000000020000500f
0007700011111111f00000aa0aa0000f000aa000f00500000000050f50000000f00500500050050ff00000500000050f0000050020000000000000020555050f
0007700011111111f00000000000000f00000000f00050005550550f55055555f00050050500500ff00500550050055f0050055020000220022000020050500f
0070070011111111f00000000000000f00000000f00500000055550f55500555f00500005000050ff05500000550000f0550000020000020002000020050500f
0000000011111111f00000aa0aa0000f000aa000f00050000000050f50000000f00050005000500ff00050000005000f0005000020000020002000020050050f
0000000011111111f00000aa0aa0000f000aa000f00500005555550f55555555f00500005000050ff50000005000000f5000000020000000000000020005500f
ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000ffffffffffffffffffffffffff0000000
0000000000000000000000000000000000000000000000000000000ffff66fffff222222222222220000000f0000000f00000000fffff55ff55ffffff0000000
0666666000666600066666000600600006666660066660000066660ffff66ffff2ff222f2f2f2f2f0000000f0000000f00000000ffff55ff55fffffff0000000
6666666006600600060006000606600006000000066666000660060ffff66ffff2f2fff2f2f2f2f20000000f0000000f00000000fff55ff55ffffffff0000000
6606606006000600060006000666000006666600006600000600060ffff66ffff222222f2f22f22f0000000f0000000f00000000ff55555555fffffff0000000
6606606006666600066660000666000006000000006600000666660ffffffffff2fff2f2f2f2f2f20000000f0000000f00000000ffff5ff5fffffffff0000000
6606606006666600066066000606600006666660006600000666660ffff66ffff2222f2f2f2f2f2f0000000f0000000f00000000ffff5ff5fffffffff0000000
6606606006000600066066000600600006666660006600000600060ffff66fffff22222222222222ffffffff0000000f00000000ffff5ff5fffffffff0000000
ffffffff00000000fffffffffffffffffffffffffffffffff000000ffffffffffffffffffffffffffff5555555555fff5f5fffff000000000000000000000000
ffffffff00000000000000000000000ff000000000000000f000000f222222fffffffffffffffffffff555ffffff5fff55ffffff000000000000000000000000
ffffffff00000000000000000000000ff000000000000000f00aa00ff222ff2ffffffffffffffffff555ff5555555fff5ff5ffff000000000000000000000000
ffffffff00000000aa00aa00aa00aa0ff0aa00aa00aa00aaf00aa00f2fff2f2ffffffffffffffffffff5ffffffff55555f5fffff000000000000000000000000
ffffffff00000000aa00aa00aa00aa0ff0aa00aa00aa00aaf000000ff222222ffffffffffffffffffff555ffffff5fff555fffff000000000000000000000000
ffffffff00000000000000000000000ff000000000000000f000000f2f2fff2fffffffffffffffffff55ffffff555fff5fffffff000000000000000000000000
ffffffff00000000000000000000000ff000000000000000f00aa00ff2f2222ffffffffffffffffffff5ffffffff5fff555fffff000000000000000000000000
ffffffff00000000fffffffffffffffffffffffffffffffff00aa00f222222fffffffffffffffffffff5ffffffff5fff5fffffff000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00c00c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00c00c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
c00000cc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cc000cc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0ccccc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0000010101010101010101010101010101010101010101000101010101000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002020202020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000511111617000000000000000000000008092020202020202000000000000000000020202c20000000000000000000000000000000000000002020202020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000008090000000000000000000000020404032000001d1e000000000000000203202020202020200000201d1e20050f00202a2b200000000000000000000000000000000000000018272020200000001d1e00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000203000000000000000000000002040403200000080900000000000000020320202020202020000020050f20020300051c0706000000000000000000000000000000000000002020201827002425152223000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000507060002030000000000000000000000020404211a0000020300000000050f00020320202a2b20202000000500001c00030002040403000000000000000000000000181927000000002020202020000000260000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000020403000203000a1011121314150b000002040403200000020300050f0002030002041214111007070600000204040404030002040403000000000000181919192700202020000000002020202020000000260000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000002040300020300020404040404040300000204040320000002030002030002030002040404212104041b00000204040404030002040403001819192700202020202000202020001827002020202020000000260000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000020403000203000221210d0e212103000002040403200000020300020300020300020421210d0e21211b00000204040404030002040403002020202000202020202000202020002020002020202020000000260000000000000000000000000000000000000000000000000000000000000000000000000000000000

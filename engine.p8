pico-8 cartridge // http://www.pico-8.com
version 42
__lua__
-------------------------------------------------------------
--  INFINITE‑SCROLL ROOFTOP RUNNER  — RING‑BUFFER REV 4     --
--  • draws map with proper X‑wrap (no more hard boundary)  --
--  • keeps player inside the 1024‑px loop seamlessly       --
--  • ground check samples both feet → no falling through   --
-------------------------------------------------------------

-- ♦ CONSTANTS ---------------------------------------------
ring_w_tiles = 128                   -- map width in tiles (P8 default)
ring_w_px    = ring_w_tiles * 8      -- 1024 px
-- templates’ original Y already lines up with art, so no math
grav        = 0.35
margin_px   =  8                     -- gap after each building

-------------------------------------------------------------
-- ♦ BUILDING TEMPLATES (same list) ------------------------
building_templates = {
 {{ 4,4, 6,7},  {3,5,6,7,9,11,12,13,14,15}},
 {{ 8,2, 9,7},  {1,3,4,5,6,7,8,9,10,11,12,13,14,15,16}},
 {{11,5,18,7},  {1,6,7,9,11,14}},
 {{21,1,27,7},  {1,3,5,6,7,9,10,11,12,13,14}},
 {{28,2,29,7},  {1,2,3,6,7,8,9,10,11,12,13,14,15,16}},
 {{31,5,32,7},  {1,3,7,11,12,14}},
 {{34,4,35,7},  {1,3,5,6,9,11,12,13,14}},
 {{37,1,45,7},  {1,3,6,7,9,11,12,14}},
 {{48,2,53,7},  {1,3,4,5,6,7,8,10,11,12,13,14,15,16}},
 {{55,1,58,7},  {1,2,3,5,6,7,9,10,11,12,13,14,15,16}},
 {{60,5,63,7},  {1,3,6,7,9,11,14}},
 {{65,4,69,7},  {1,3,5,6,7,9,10,11,12,13,14}},
 {{71,3,73,7},  {1,2,3,5,6,7,9,10,11,12,13,14,15,16}},
 {{75,6,76,7},  {3,6,11}},
 {{78,0,82,7},  {1,3,6,7,9,11,14}},
 {{84,1,88,7},  {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15}}
}
for t in all(building_templates) do
  t[1][3]+=1 t[1][4]+=1 -- make bounds exclusive
end

-------------------------------------------------------------
-- ♦ COPY TEMPLATES TO RAM & CLEAR FROM CART MAP -----------
template_pix = {}
for id,tmp in pairs(building_templates) do
  local sx1,sy1,sx2,sy2 = unpack(tmp[1])
  local w,h = sx2-sx1, sy2-sy1
  local bank={}
  for dy=0,h-1 do
    local row={}
    for dx=0,w-1 do
      local tile=mget(sx1+dx, sy1+dy)
      row[dx]=tile
      mset(sx1+dx, sy1+dy, 0)
    end
    bank[dy]=row
  end
  template_pix[id]=bank
end

-------------------------------------------------------------
-- ♦ RING‑BUFFER BUILDING SYSTEM ---------------------------
buildings   = {}  -- {tx,id,w,h}
next_px     = 0   -- pixel‑x where next building may start + margin

function stamp_building(id, world_tx)
  local pix   = template_pix[id]
  local b     = building_templates[id][1]
  local w,h   = b[3]-b[1], b[4]-b[2]
  local sy1   = b[2]                   -- keep original Y!

  for dy=0,h-1 do
    local ty = sy1 + dy
    for dx=0,w-1 do
      local tx = (world_tx + dx) % ring_w_tiles
      mset(tx, ty, pix[dy][dx])
    end
  end

  add(buildings,{tx=world_tx, id=id, w=w, h=h})
  return (world_tx + w + 1) * 8 + margin_px
end

function clear_building(b)
  local bdef = building_templates[b.id][1]
  local sy1  = bdef[2]
  for dy=0,b.h-1 do
    local ty = sy1 + dy
    for dx=0,b.w-1 do
      local tx = (b.tx + dx) % ring_w_tiles
      mset(tx, ty, 0)
    end
  end
end

function new_building(id)
  local world_tx = flr(next_px/8) + 1
  next_px = stamp_building(id, world_tx)
end

function add_random_building()
  local opts = building_templates[buildings[#buildings].id][2]
  new_building(rnd(opts))
end

function delete_front()
  clear_building(buildings[1])
  deli(buildings,1)
end

-------------------------------------------------------------
-- ♦ COLLISION (samples map directly) ----------------------
function is_solid(px,py)
  local tx = (flr(px/8)) % ring_w_tiles
  local ty = flr(py/8)
  return fget(mget(tx,ty),0)
end

-------------------------------------------------------------
-- ♦ PLAYER -------------------------------------------------
player = {x=64,y=0,dx=0,dy=0,flip=false}

function update_player()
  -- ← / → (two‑foot clearance so you don’t snag edges)
  local left_block  = is_solid(player.x-1,   player.y+6) or is_solid(player.x-1,   player.y+2)
  local right_block = is_solid(player.x+9,   player.y+6) or is_solid(player.x+9,   player.y+2)
  if btn(1) and not right_block then player.dx += 0.4 player.flip=false end
  if btn(0) and not left_block  then player.dx -= 0.4 player.flip=true  end

  -- gravity & jump (check both feet)
  local on_ground = is_solid(player.x+2, player.y+8) or is_solid(player.x+6, player.y+8)
  if on_ground then
    player.dy = 0
    if btnp(4) then player.dy = -3 end
  else
    player.dy += grav
  end

  -- integrate
  player.x += player.dx
  player.y += player.dy
  player.dx *= 0.8

  -- keep X inside ring to avoid huge numbers
  if player.x > ring_w_px*2 then
    player.x -= ring_w_px
    next_px  -= ring_w_px
    for b in all(buildings) do b.tx -= ring_w_tiles end
  elseif player.x < 0 then
    player.x += ring_w_px
    next_px  += ring_w_px
    for b in all(buildings) do b.tx += ring_w_tiles end
  end
end

function draw_player(cam_loop)
  local draw_x = (player.x % ring_w_px)
  spr(1, draw_x, player.y,1,1,player.flip)
end

-------------------------------------------------------------
-- ♦ PICO‑8 LIFECYCLE --------------------------------------
function _init()
  new_building(1)
  for i=1,6 do add_random_building() end
end

function _update60()
  update_player()
  if next_px - player.x < 120 then delete_front() add_random_building() end
end

-- ◇ draw map twice to cover wrap seam
function _draw()
cls(0)
  local cam_px   = (player.x % ring_w_px) - 32
  local cam_tile = flr(cam_px/8)
  local cam_off  = cam_px % 8

  camera(0,0)       -- neutral, we offset manually

  -- first slice
  map(cam_tile % ring_w_tiles, 0, -cam_off, 0,  16, 32)
  -- if slice crosses ring edge, draw the wrapped part
  if cam_off > 0 then
    map((cam_tile+16) % ring_w_tiles, 0, 128-cam_off, 0, 16, 32)
  end

  draw_player(cam_px)
end
__gfx__
00000000111111111002000000000001000000001111111111111111111111111111111111111111100500001000000011111111222222222222222211111111
00000000111111111049210000122101001221001000000000000001000000001000000000000001010500000100000000000000200000000000000200000001
0070070011111111104a941001499411014994101000000055555501555555551000550000055001001500000010000000005500200000000000000200005001
0007700011111111109a7920029a7921029a79201005000000000501500000001005005000500501000500000001000000000500200000000000000205550501
0007700011111111109a7920029a7921029a79201000500055055501555055501000500505005001000510000000100000500550200002200220000200505001
007007001111111110147920029a7921029a79201005000005505501555505551005000050000501000501000000010005500000200000200020000200505001
00000000111111111001442002444421024444201000500000000501500000001000500050005001000500100000001000050000200000200020000200500501
00000000111111111000110000111101001111001005000055555501555555551005000050000501000500010000000150000000200000000000000200055001
00111110000002100000100000011100000000001000000000000000000110011111111111111111111111110000000111111111111511110005000010000000
02888882001128810202820001288821001111101012210000000000001881011122222222222222000000010000000100000000000500000005000010000000
18888882028888821828881001888821028888821149941000000000008888011211222121212121000000010000000100000000000500000005000010000000
1821821018888820188828108888210018218210129a792000000000008888011212111212121212000000010000000100000000000500000005000010000000
1821821018221110188828102888210018888882129a792000000000002882011222222121221221000000010000000100000000000500000005000010000000
1888888218888820182888100188882118218210129a792000000000000220011211121212121212000000010000000100000000000500000005000010000000
02888882028888200212820000288821028888821244442000000000001881011222212121212121000000010000000100000000000500000005000010000000
00111110001111000100100000011100001111101011110000000000001281011122222222222222111111110000000100000000000500000005000010000000
11111111000000001111111111111111111111111111111110000001111111111111111111111111100000005555511111111111111111110002000000000000
11111111009999900000000000000001100000000000000010000001222222111111111111111111010000001111511110000000110000000049210000099000
111111110090009000000000000000011000000000000000100aa00112221121111111111111111100100000555551111000000010100000004a941000099000
1111111100900000aa00aa00aa00aa0110aa00aa00aa00aa100aa00121112121111111111111111100050000111155551000000010010000009a792000099099
1111111100000009aa00aa00aa00aa0110aa00aa00aa00aa1000000112222221111111111111111100051000111151111000000010001000009a792000999999
11111111000009900000000000000001100000000000000010000001212111211111111111111111000501001155511110000000100000000014792000990990
111111110000900000000000000000011000000000000000100aa001121222211111111111111111000500101111511110000000100000100001442000099900
111111110000000011111111111111111111111111111111100aa001222222111111111111111111000500011111511110000000100000000000110000000000
00077000000000000000000000077000000770000000000000000000000000000000000000077000000000000000000000000000000000000000000000011100
00070700000770000007700000070700000707000007700000077000000770000007700000070700000000000000000000000000000000000000000000167610
00077700000707000007070000077700000777000007070000070700000707000007070000077700000000000000000000000000000000000000000001677761
00777000007777000007770000077000007770000777770000777700007777000007770000777000000000000000000000000000000000000000000001d67671
007777000077770000777000007770000707777070077077070777000077770000077000007777000000000000000000000000000000000000000000015d6761
0077770000777700007777000077770000077700000770000707707000777700000777000077777000000000000000000000000000000000000000000015d610
00077000000770000077770000777700077000700077070000077000000770000007770000700000000000000000000000000000000000000000000000011100
00077000000770000007700000077000000000000000070000007000000700000070000007000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00c00c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00c00c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
c00000cc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
cc000cc0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0ccccc00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
0001010101010101010101010101010101010101010100010101010101010001010101010101010101010101010101010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002d1c1c1c0b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000002d1c1c1c1c1c0b0000000000000000002d1c0b0000000000000000000000000000002d1c1c0b000000000000000000000000000000000000001f2121211b002d1c1c1c0b000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000002d0b00000000000000000000001f11121012141700000000000000000002040300000000000000000000000000000002040403000000000000000000000000000000000000002a2121211b001f0400041b000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000001f1b00000000000000000000000221212121211b2d0b0000000000000002040300000000000000000000002d1c0b00020404030000000000000000000000002d1c0b000000001e1d1d1d1d000b04040003000000000000000000000000000000000000000000000000000000000000000000000000000000
000000002d1c0b00020300000000000000000000001f0404210421031f1b000000002d0b000204041c1c1c1c1c0b00002d1c1c1b040300020404030000000000002d1c1c1c0b00020403000000001e1e1e1e1e00002c151b1c000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000020003001f1b002d1c1c1c1c1c1c0b0000020421042104030203002d0b0002030002040404040404040300000204040404030002040403002d1c1c0b00020404040300020403000000002d1d1c1d0a0000021f0300000000000000000000000000000000000000000000000000000000000000000000000000000000
000000001f041b00020300021012111214111700000221042104041b0203001f1b0002030002040404141304040300000204040404030002040403000204040300020404040300020403002d0b001f2121211b00001f151b00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000020403001f1b00020421040421041b0000020421040421031f1b000203001f1b00020404040d0e04040300000204040404030002040403000204040300020404040300020403000203001f2121211b0000021f0300000000000000000000000000000000000000000000000000000000000000000000000000000000
